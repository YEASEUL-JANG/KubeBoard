server:
  port: 8000
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka

spring:
  application:
    name: apigateway-service
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
  cloud:
    gateway:
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins: 'http://localhost:8081'
            allow-credentials: true
            allowedHeaders: '*'
            allowedMethods:
              - PUT
              - GET
              - POST
              - DELETE
              - OPTIONS
      routes:
        ########## USER SERVICE
        - id: user-service-actuator
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/actuator/** # 액추에이터 정보
            - Method=GET,POST
          filters:
            - RewritePath=/user-service/(?<segment>.*),/$\{segment}
        -  id: user-service-login
           uri: lb://USER-SERVICE
           predicates:
             - Path=/user-service/login #로그인 (실제 contoller에 없는 api, 스프링시큐리티에서 제공된 login api를 사용)
             - Method=POST,OPTIONS
           filters:
             - name: LoggingFilter
               args:
                 msName: USER-SERVICE
                 requestLogger: true
                 responseLogger: true
             - RewritePath=/user-service/(?<segment>.*),/$\{segment}
        - id: user-service-idCheck
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/idCheck #로그아웃
            - Method=POST,OPTIONS
          filters:
            - name: LoggingFilter
              args:
                msName: USER-SERVICE
                requestLogger: true
                responseLogger: true
        -  id: user-service-register
           uri: lb://USER-SERVICE
           predicates:
             - Path=/user-service/users #회원가입
             - Method=POST,OPTIONS
           filters:
             - name: LoggingFilter
               args:
                 msName: USER-SERVICE
                 requestLogger: true
                 responseLogger: true
        -  id: user-service-general
           uri: lb://USER-SERVICE
           predicates:
             - Path=/user-service/** #그 외 나머지 요청 (요청 헤더안에 인증토큰있는지 검증)
             - Method=GET
           filters:
             - name: LoggingFilter
               args:
                 msName: USER-SERVICE
                 requestLogger: true
                 responseLogger: true
             - AuthorizationHeaderfilter

        ########## POD SERVICE
        - id: pod-service-actuator
          uri: lb://POD-SERVICE
          predicates:
            - Path=/pod-service/actuator/** # 액추에이터 정보
          filters:
            - RewritePath=/pod-service/(?<segment>.*),/$\{segment}
        - id: pod-service-general
          uri: lb://POD-SERVICE
          predicates:
            - Path=/pod-service/**
            - Method=GET,POST,OPTIONS
          filters:
            - name: LoggingFilter
              args:
                msName: POD-SERVICE
                requestLogger: true
                responseLogger: true
            - AuthorizationHeaderfilter

        ########## DEPLOYMENT SERVICE
        - id: deployment-service-actuator
          uri: lb://DEPLOYMENT-SERVICE
          predicates:
            - Path=/deployment-service/actuator/** # 액추에이터 정보
          filters:
            - RewritePath=/deployment-service/(?<segment>.*),/$\{segment}
        - id: deployment-service-general
          uri: lb://DEPLOYMENT-SERVICE
          predicates:
            - Path=/deployment-service/**
            - Method=GET,POST,OPTIONS
          filters:
            - name: LoggingFilter
              args:
                msName: DEPLOYMENT-SERVICE
                requestLogger: true
                responseLogger: true
            - AuthorizationHeaderfilter

        ########## SERVICE SERVICE
        - id: service-service-actuator
          uri: lb://SERVICE-SERVICE
          predicates:
            - Path=/service-service/actuator/** # 액추에이터 정보
          filters:
            - RewritePath=/service-service/(?<segment>.*),/$\{segment}
        - id: service-service-general
          uri: lb://SERVICE-SERVICE
          predicates:
            - Path=/service-service/**
            - Method=GET,POST,OPTIONS
          filters:
            - name: LoggingFilter
              args:
                msName: SERVICE-SERVICE
                requestLogger: true
                responseLogger: true
            - AuthorizationHeaderfilter






management:
  endpoints:
    web:
      exposure:
        include: refresh,health,beans,httptrace,busrefresh,info,metrics,prometheus
